# Homework: Arrays and matrices
# ==============================================================================
import numpy as np
import matplotlib.pyplot as plt

#------------------------------------------------------------------------------
# Problem 1
#------------------------------------------------------------------------------
A = np.array([[0, 1, 1],[1, 0, 1], [1, 1, 0]])
B = np.array([[0, 2, 3], [0, 5, 0], [7, 0, 0]])
print("A = ", A)
print("B = ", B)

print("A * B = ", A * B)
print("A + B = \n", A + B)

Atrans = A.transpose()
print("A' = \n ", Atrans)

print("The second row of A is: ", A[1, :])

av = A[:, 2]
bv = B[2, :]
print("av + bv = ", av + bv)
print("-------------------------------------------------------------------")

#------------------------------------------------------------------------------
# Problem 2
#------------------------------------------------------------------------------
mu = 0.0
sigma = 1.0
xv = np.linspace(-4, 4, 100)
yv = (1/(sigma*np.sqrt(np.pi)))*np.exp(-0.5*((xv - mu)/sigma)**2)

plt.plot(xv, yv, 'b-', linewidth=2, label='points')
plt.show()

print("-------------------------------------------------------------------")
#------------------------------------------------------------------------------
# Problem 3
#------------------------------------------------------------------------------
wv = np.linspace(0, 3, 31) # np.linspace(from, to, nr. of steps)
w1v = np.arange(0, 30.1, 0.1) # np.arange(from, to, step size)

print("wv= \n {}".format(wv))
print("w1v= \n {}".format(w1v))
print("Different Print Statements: ")
print("#1 = \n {}".format(wv[:]))
print("#2 = \n {}".format(wv[:-2]))
print("#3 = \n {}".format(wv[::5]))
print("#4 = \n {}".format(wv[2:-2:6]))
print("-------------------------------------------------------------------")

#------------------------------------------------------------------------------
# Problem 4
#------------------------------------------------------------------------------
A = np.identity(3)
B = np.ones((5,3))
C = np.vstack((A, B))
print("The stacked matrix C is: ")
print(C)
print("-------------------------------------------------------------------")

#------------------------------------------------------------------------------
# Problem 5
#------------------------------------------------------------------------------
nrRows, nrCols = C.shape

print("Elements from the second column: ")
for i in range(nrRows):
    print(C[i,1])

print("Elements from the third row: ")
for j in range(nrCols):
    print(C[2, j])

print("-------------------------------------------------------------------")

#------------------------------------------------------------------------------
# Problem 6
#------------------------------------------------------------------------------
A = np.array([[2, 0, 0],[0, 3, 0], [0, 0, 4],[6, 0, 0],[0, 7, 0], [0, 0, 8]])
print(A)
nrRows, nrCols = A.shape
j = 0
for i in range(nrRows):
    # Reset the column pointer j to 0 when it hits column limit
    if j > nrCols-1: j = 0
    print(A[i, j])
    j += 1

print("-------------------------------------------------------------------")
