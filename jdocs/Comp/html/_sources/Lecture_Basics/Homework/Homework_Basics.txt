Homework 1
============

Submit this homework via GitHub by Monday, February 2 at 11:55 pm.
 * Python-scripts are submitted in one file called: ``homework1.py``
And push your repository on Github using **SmartGit** as discussed in class.

I will base your homework grade on my grading of 2 randomly selected homework exercises.
So please make sure that you complete every homework 100% as you might otherwise end up with zero points.

Exercise 1:
-----------

From Jones, Maillardet, and Robinson (2009): Chapter 2, Exercise 2 (a,b,c,d). Provide both R and Python scripts.

Give Python expressions that return the following list of numbers.

1. :math:`(1, 2, 3, 4, 5, 6, 7, 8, 7, 6, 5, 4, 3, 2, 1)`

2. :math:`(1, 2, 2, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 5)`

and define them as ``listA`` and ``listB``.

3. Print the 3. element of ``listA``.

4. Print element 5-8 of ``listB``.

5. Add the 3. element of ``listA`` to the 8. element of ``listB``

Exercise 2:
-----------

Compute the growth of money in a bank. Let :math:`p` be a bank's interest rate
in percent per year. An initial amount :math:`A` has then grown to
:math:`A(1+\frac{p}{100})^n`  after :math:`n` years. Make a program for computing how much
money 1,000 euros have grown to after three years with $5\%$ interest rate.

Exercise 3:
--------------

Type the following program in your Spyder editor and execute it. It won't run.
Debug it and make sure it all runs through correct.y.::

  import numpy as np
  h = 5.0 # height
  b = 2.0 # base
  r = 1.5 # radius
  #
  area_parallelogram = h*b
  print "The area of the parallelogram is %.3f" % area_parallelogram
  #
  area_square = b**2
  print "The area of the square is %g" % area_square
  #
  area_circle = pi*r**2
  print "The area of the circle is %.3f" % area_circle
  #
  volume_cone = 1.0/3*npp.pi*r**2*h
  print 'The volume of the cone is %.3f' % volume_cone

Exercise 4:
--------------

Type these short programs in your editor and execute them. When they do not
work, identify and correct the erroneous statements.

* The following code checks whether :math:`sin(x)^2  + cos(x)^2 = 1`
Code::

  from math import sin, cos
  x = pi/4
  1_val = sin(x)**2 + cos2(x)**2
  print 1_VAL

* Fix the following script. Hint, some variables are used before they are
  defined. Make up some values for undefined variables and add them to your
  script.
Code::

  v0 = 3 m/s
  t = 1 s
  a = 2 m/s**2
  s = v0*t + 1/2 a*t**2
  print s

* The next code chunk verifies these equations:

.. math::
    \begin{eqnarray*}
    (a + b)^2 &=& a^2 + 2ab + b^2 \\
    (a - b)^2 &=& a^2 - 2ab + b^2
    \end{eqnarray*}

Code::

  a = 3,3 b = 5,3
  a2 = a**2
  b2 = b**2
  eq1_sum = a2 + 2ab + b2
  eq2_sum = a2 - 2ab + b2
  eq1_pow = (a + b)**2
  eq2_pow = (a - b)**2
  print 'First equation: %h = %' % (eq2_sum, eq2_sum)
  print 'Second equation: %h = %' % (eq2_pow, eq2_pow)

Exercise 5:
-----------

Find errors in the coding of a formula. Given a quadratic equation,
:math:`ax^2 + bx + c = 0`, the two roots are:
:math:`x_1 = \frac{-b + \sqrt{b^2 - 4ac}}{2a},  x_2 = \frac{-b - \sqrt{b^2 - 4ac}}{2a}`

What are the problems with the following program::

  a = 2; b = 1; c = 2
  from math import sqrt
  q = sqrt(b*b - 4*a*c)
  x1 = (-b + q)/2*a
  x2 = (-b - q)/2*a
  print x1, x2

Hint: Compute all terms in the math expression above with the aid of a
calculator, and compare with the corresponding intermediate results computed in
the program. You need to add some ``print`` statements to see the result of
``q``, ``-b+q``, and ``2*a``.
