Homework 5: Functions
===============================================================================

Submit this homework in class on Wednesday, March 4 at 11:55pm.

  * Python-scripts are submitted in one file called: ``Homework5.py``

I need to be able to quickly run these scripts on my computer.

I will based your homework grade on my grading of 2 randomly selected homework
exercises. So please make sure that you complete every homework 100% as you
might otherwise end up with zero points.

Exercise 1
-------------------------------------------------------------------------------

The formula for
converting Fahrenheit degrees to Celsius reads: :math:`C = \frac{5}{9}(F - 32)`

Write a function C(F) that implements this formula. And convert the following
temperatures from F to C: :math:`{60, 70, 75, 80, 85, 90, 95, 100, 105}`
Use a loop to accomplish this and pretty print the results i.e. something
like::

    60  Fahrenheit equal .. Celsius
    70  Fahrenheit equal .. Celsius
    ...
    105 Fahrenheit equal .. Celsius

Exercise 2
-------------------------------------------------------------------------------

The factorial of :math:`n`, written as :math:`n!`, is defined as :math:`n! = n
\times (n - 1)(n - 2) ... \times 1` with the special cases :math:`1! = 1`,
:math:`0! = 1`.

For example, :math:`4! = 4 \times 3  \times 2 \times  1 = 24`, and :math:`2! =
2 \times 1 = 2`. Write a function ``myfact(n)`` that returns :math:`n!`. Return
1 immediately if x is 1 or 0, otherwise use a loop to compute :math:`n!`.

You are not allowed to use the built in ``np.fact()`` function - but you can
use this built in function to check the correctness of your "hand written"
function.


.. code-block:: python

    import math as m
    print(m.factorial(4))
    

::

    24
    
    



Exercise 3
-------------------------------------------------------------------------------

The (Euclidean) length of a vector :math:`v = (a_0, a_1,\dots, a_k)` is the square
root of the sum of squares of its coordinates :math:`\sqrt{a_0^2+a_1^2,\dots}`. Write
a function that returns the length of a vector. Then test your function and
calculate the length of vector: :math:`a = [3, 5, 23, 45, 12]`.

Exercise 4
-------------------------------------------------------------------------------

This should look familiar.  Plot the following composite function.
First define a function f(x) as below and then evaluate that function on a grid
of x values from :math:`[-3, 5]`. Then plot that function.

.. math::
   :nowrap:

    f(x) =
    \begin{cases}
        x^2 & x < -1 \\
        |x| & -1 \leq x < 0 \\
        -1 & 0 \leq x < 0.5 \\
        x^2 & 0.5 \leq x < 2 \\
        \sqrt{x} & 2 \leq x
    \end{cases}

Exercise 5: Bonus Question
-------------------------------------------------------------------------------

Some object is moving along a path in the plane. At n points of time we have
recorded the corresponding (x, y) positions of the object:
:math:`(x_0 , y_0), (x_1, y_2), ..., (x_{n-1}, y_{n-1})`.
The total length L of the path from :math:`(x_0, y_0)` to
:math:`(x_{n-1}, y_{n-1})` is the sum of all the individual line segments
:math:`(x_{i-1}, y_{i-1})` to :math:`$(x_i, y_i)`, for :math:`i = 1,..., n-1)`:

:math:`L = \sum_{i=1}^{n-1} \sqrt{(x_i - x_{i-1})^2 + (y_i - y_{i-1})^2}`

Make a function ``pathlength(x,y)`` for computing this length
L according to the formula above.
The arguments x and y hold all the :math:`x_0,...,x_{n-1}` and :math:`y_0,...,y_{n-1}`
coordinates, respectively. Test the function on a triangular path with the four
points (1,1), (2,1), (1,2), and (1,1).


